*metarw-git.txt*	metarw scheme: git

Version 0.0.0
Copyright (C) 2008 kana <http://whileimautomaton.net/>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*metarw-git-contents*

Introduction		|metarw-git-introduction|
Notations		|metarw-git-notations|
Bugs			|metarw-git-bugs|
Changelog		|metarw-git-changelog|




==============================================================================
INTRODUCTION					*metarw-git-introduction*

metarw-git is a scheme for |metarw| to read various objects in a git
repository with fakepathes.

Note that this scheme just supports reading objects.  Writing objects are not
supported.

Requirements:
- Vim 7.1 or later.
- metarw 0.0.0 or later.




==============================================================================
NOTATIONS					*metarw-git-notations*
In metarw-git, the following notations are available.

						*git:{commit-ish}:{path}*
git:{commit-ish}:{path}
	Show the result of "git show {commit-ish}:{path}", where:
	- {commit-ish} is a commit object or a tag object pointing to a commit
	  object.  Example: master, HEAD, HEAD^3, v0.0.0
	- {path} is the path to a blog or a tree object in the {commit-ish}.

git:{commit-ish}:{tree}/	OR		*git:{commit-ish}:{tree}/*
git:{commit-ish}:		OR		*git:{commit-ish}:*
git:						*git:*
	Show the content by |metarw-content-browser| if it is suitable.
	Otherwise, same as "git:{commit-ish}:{path}".
	The 2nd form shows the content of the top directory in {commit-ish}.
	The 3rd form shows the all branches of the current repository.




==============================================================================
BUGS						*metarw-git-bugs*

- metarw-git assumes that the current directory must be under the control of
  git, so that |metarw-git-notations| should have an optional {git-dir} part.

- Should metarw-git have options on output format?  Leave them to git?

- There are many bugs around the world.




==============================================================================
CHANGELOG					*metarw-git-changelog*

0.0.0	2008-07-25T06:18:40+09:00
	- Initial version.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:fdm=marker:
